{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Form","useState","React","content","hasError","name","setName","email","setEmail","phone","setPhone","source","setSource","type","setType","setOther","className","id","onSubmit","e","other","preventDefault","alert","handleSubmit","htmlFor","placeholder","onChange","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57a2f2aa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Form() {\n  const { useState } = React;\n  const [name, setName] = useState({ content: \"\", hasError: false });\n  const [email, setEmail] = useState({ content: \"\", hasError: false });\n  const [phone, setPhone] = useState({ content: \"\", hasError: false });\n  const [source, setSource] = useState({ content: \"\", hasError: false });\n  const [type, setType] = useState({ content: \"\", hasError: false });\n  const [other, setOther] = useState(\"\");\n\n  const handleSubmit = (e, name, email, phone, type, source, other) => {\n    e.preventDefault();\n    if (!name.content) {\n      setName({\n        name,\n        hasError: true,\n      });\n    }\n    if (!email.content) {\n      setEmail({\n        email,\n        hasError: true,\n      });\n    }\n    if (!phone.content) {\n      setPhone({\n        phone,\n        hasError: true,\n      });\n    }\n    if (!type.content) {\n      setType({\n        type,\n        hasError: true,\n      });\n    }\n    if (!source.content) {\n      setSource({\n        source,\n        hasError: true,\n      });\n    }\n    if (\n      name.content &&\n      email.content &&\n      phone.content &&\n      type.content &&\n      source.content\n    ) {\n      alert(`\n        姓名: ${name.content}\n        信箱: ${email.content}\n        手機: ${phone.content}    \n        報名類型: ${type.content}\n        如何得知: ${source.content}\n      `);\n    }\n  };\n  return (\n    <div className=\"wrapper\">\n      <form\n        id=\"myForm\"\n        onSubmit={(e) => {\n          handleSubmit(e, name, email, phone, type, source, other);\n        }}\n      >\n        <h1>新拖延運動報名表單</h1>\n        <h2>活動日期：2020/12/10 ~ 2020/12/11</h2>\n        <h2>活動地點：台北市大安區新生南路二段1號</h2>\n        <h3>*必填</h3>\n        <section className=\"information\">\n          <label htmlFor=\"name\">\n            <div>\n              暱稱: <span>*</span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"您的回答\"\n              onChange={(e) => {\n                setName({ content: e.target.value, hasError: false });\n              }}\n            />\n            <p className={name.hasError ? \"\" : \"noError\"}>請輸入暱稱</p>\n          </label>\n          <label htmlFor=\"email\">\n            <div>\n              電子郵件: <span>*</span>\n            </div>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"你的電子郵件\"\n              onChange={(e) => {\n                setEmail({ content: e.target.value, hasError: false });\n              }}\n            />\n            <p className={email.hasError ? \"\" : \"noError\"}>請輸入電子郵件</p>\n          </label>\n          <label htmlFor=\"phone\">\n            <div>\n              手機號碼: <span>*</span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"phone\"\n              placeholder=\"你的手機號碼\"\n              onChange={(e) => {\n                setPhone({ content: e.target.value, hasError: false });\n              }}\n            />\n            <p className={phone.hasError ? \"\" : \"noError\"}>請輸入手機號碼</p>\n          </label>\n        </section>\n        <section>\n          <div>\n            報名類型: <span>*</span>\n          </div>\n          <label>\n            <input\n              type=\"radio\"\n              className=\"radio-button\"\n              name=\"type\"\n              onChange={() => {\n                setType({ content: \"躺在床上用想像力實作\", hasError: false });\n              }}\n            />\n            躺在床上用想像力實作\n          </label>\n          <br />\n          <label>\n            <input\n              type=\"radio\"\n              className=\"radio-button\"\n              name=\"type\"\n              onChange={() => {\n                setType({ content: \"趴在地上滑手機找現成的\", hasError: false });\n              }}\n            />\n            趴在地上滑手機找現成的\n          </label>\n          <p className={type.hasError ? \"\" : \"noError\"}>請輸入</p>\n        </section>\n        <section className=\"information\">\n          <label htmlFor=\"source\">\n            <div>\n              怎麼知道這個活動的? <span>*</span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"source\"\n              placeholder=\"您的回答\"\n              onChange={(e) => {\n                setSource({ content: e.target.value, hasError: false });\n              }}\n            />\n            <p className={source.hasError ? \"\" : \"noError\"}>請輸入</p>\n          </label>\n          <label htmlFor=\"other\">\n            <div>其他</div>\n            <span>對活動的一些建議</span>\n            <input\n              id=\"other\"\n              placeholder=\"您的回答\"\n              onChange={(e) => {\n                setOther(e.target.value);\n              }}\n            />\n          </label>\n        </section>\n        <input type=\"submit\" className=\"button\" id=\"button\" />\n        <p>請勿透過表單送出您的密碼。</p>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <Form />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}